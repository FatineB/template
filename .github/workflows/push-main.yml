on:
  push:
    branches:
      - main
      - feat/cd

# only run one in parallel
concurrency: push_main

name: 🚢 Test & Build & Deploy - Production

env:
  CI: true
  NODE_VERSION: 14

defaults:
  run:
    shell: bash

jobs:
  install-dependencies:
    name: 🏗 Install dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install & cache node dependencies
        uses: ./.github/actions/install-node-deps

  changes:
    name: 🗒 Get modified packages
    needs: install-dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      affected_apps: ${{ steps.get-project-changes.outputs.affected_apps }}
      affected_libs: ${{ steps.get-project-changes.outputs.affected_libs }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - name: Get project changes
        id: get-project-changes
        uses: ./.github/actions/get-project-changes

  package:
    name: 📦 Package
    needs: install-dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Package and cache builds
        uses: ./.github/actions/package

  app-lint-and-tests:
    name: 🏛 App Tests
    needs: [package, changes]
    runs-on: ubuntu-latest
    if: join(fromJson(needs.changes.outputs.affected_apps)) != ''
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        AFFECTED_APP: ${{ fromJson(needs.changes.outputs.affected_apps) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run tests
        uses: ./.github/actions/lint-and-tests
        with:
          path: ${{ matrix.AFFECTED_APP }}

  library-lint-and-tests:
    name: 📚 Library Tests
    needs: [package, changes]
    runs-on: ubuntu-latest
    if: join(fromJson(needs.changes.outputs.affected_libs)) != ''
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        AFFECTED_LIB: ${{ fromJson(needs.changes.outputs.affected_libs) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run tests
        uses: ./.github/actions/lint-and-tests
        with:
          path: ${{ matrix.AFFECTED_LIB }}
